stages:
  - static analysis
  - build
  - test
  - deploy

# STATIC ANALYSIS

pre-commit checks:
  stage: static analysis
  image:
    name: anatolygusev/pre-commit
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  cache:
    paths:
      - ${PRE_COMMIT_HOME}
  only:
    changes:
      - backend/
      - .gitlab-ci.yml
  only: [merge_requests]
  script:
    - pre-commit run -a

# BUILD

.build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  only:
    - master
    - dev
  before_script:
    - export LATEST_IMAGE_TAG=$IMAGE_NAME:latest
    - export COMMIT_IMAGE_TAG=$IMAGE_NAME:${CI_COMMIT_SHA:0:8}
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/${CONTEXT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/${CONTEXT_DIR}/Dockerfile"
      --destination "$LATEST_IMAGE_TAG"
      --destination "$COMMIT_IMAGE_TAG"
      --cache

build:
  extends: .build
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/backend
    CONTEXT_DIR: .

# TEST

test:
  stage: test
  image:
    name: $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA
  services:
    - postgres
  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
    GIT_STRATEGY: none
  script:
    - cd /app
    - coverage run -m pytest --junitxml=xunit.xml -n auto
  after_script:
    - cd /app
    - coverage report
    - coverage xml
    - cd -
    - cp /app/xunit.xml ./ || true
    - cp /app/coverage.xml ./ || true
  artifacts:
    paths:
      - ./xunit.xml
      - ./coverage.xml
    reports:
      junit: xunit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

# DEPLOY

.deploy:
  image:
    name: anatolygusev/helm-secrets
    entrypoint: [""]
  stage: deploy
  variables:
    HELM_TIMEOUT: 5m
    KUBECONTEXT: ""
  before_script:
    - echo "$CI_GPG_SECRET_KEY" | gpg --import
  script:
    - >- 
      helm secrets upgrade
      --kubeconfig="$KUBECONFIG"
      --kube-context="$KUBECONTEXT"
      --install
      --atomic
      --history-max 4
      --timeout="$HELM_TIMEOUT"
      --namespace="$KUBE_NAMESPACE"
      --create-namespace
      --values=".helm/secrets.yaml"
      --values=".helm/environments/${ENVIRONMENT}/values.yaml"
      --values=".helm/environments/${ENVIRONMENT}/secrets.yaml"
      --set "global.backend.image.tag=$BACKEND_IMAGE_TAG"
      {{ cookiecutter.project_dash }}
      .helm

deploy dev:
  extends: .deploy
  environment:
    name: dev
  only:
    refs:
      - master
  variables:
    KUBE_NAMESPACE: {{ cookiecutter.project_dash }}-dev
    ENVIRONMENT: dev
