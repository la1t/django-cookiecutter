stages:
  - build
  - deploy

.build:
  image: docker:19.03.12
  stage: build
  only:
    - master
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build backend:
  extends: .build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:latest
  script:
    - docker pull $IMAGE_TAG || true
    - docker build --cache-from=$IMAGE_TAG --tag=$IMAGE_TAG .
    - docker push $IMAGE_TAG

.deploy:
  image: docker/compose
  stage: deploy
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_TLS_VERIFY: "1"
    DOCKER_CERT_PATH: "/docker-cert"
    DOCKER_HOST: "$SWARM_HOST"
  before_script:
    - mkdir -p /docker-cert
    - echo "$SWARM_CA_CERT" > /docker-cert/ca.pem
    - echo "$SWARM_CERT" > /docker-cert/cert.pem
    - echo "$SWARM_KEY" > /docker-cert/key.pem
    - cat /docker-cert/ca.pem
    - cat /docker-cert/cert.pem
    - cat /docker-cert/key.pem
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

deploy stage:
  extends: .deploy
  environment: stage
  script:
    - docker stack deploy -c .swarm/base.yml -c .swarm/stage.yml --with-registry-auth {{ cookiecutter.project_slug }}_stage
    - sh bin/service-exec {{ cookiecutter.project_slug }}_stage_app python manage.py migrate

deploy prod:
  extends: .deploy
  environment: prod
  when: manual
  script:
    - docker stack deploy -c .swarm/base.yml -c .swarm/prod.yml --with-registry-auth {{ cookiecutter.project_slug }}_prod
    - sh bin/service-exec {{ cookiecutter.project_slug }}_prod_app python manage.py migrate
